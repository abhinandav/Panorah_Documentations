"use strict";(self.webpackChunkpanorah_documentation=self.webpackChunkpanorah_documentation||[]).push([[323],{8731:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>t,metadata:()=>a,toc:()=>d});var s=i(4848),r=i(8453);const t={title:"controller.py",sidebar_position:2},l="Controllers Module Overview",a={id:"architecture/Api/doctype/controller",title:"controller.py",description:"The controllers.py file serves as the central hub for managing and executing backend operations within the Panorah Framework. It defines the logic for interacting with database tables, handling dynamic operations, and supporting the creation, retrieval, and manipulation of data through various controller methods.",source:"@site/docs/architecture/Api/doctype/controller.md",sourceDirName:"architecture/Api/doctype",slug:"/architecture/Api/doctype/controller",permalink:"/docs/architecture/Api/doctype/controller",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/architecture/Api/doctype/controller.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"controller.py",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"views.py",permalink:"/docs/architecture/Api/doctype/views"},next:{title:"dao.py",permalink:"/docs/architecture/Api/doctype/dao"}},o={},d=[{value:"Key Responsibilities",id:"key-responsibilities",level:2},{value:"Highlights of Features",id:"highlights-of-features",level:2},{value:"1. <strong>Dynamic ORM Class Generation</strong>",id:"1-dynamic-orm-class-generation",level:3},{value:"2. <strong>Type-Safe Data Handling</strong>",id:"2-type-safe-data-handling",level:3},{value:"3. <strong>Error Handling and Logging</strong>",id:"3-error-handling-and-logging",level:3},{value:"4. <strong>File Metadata Management</strong>",id:"4-file-metadata-management",level:3},{value:"Modular Functionality",id:"modular-functionality",level:2},{value:"<strong>Key Methods</strong>",id:"key-methods",level:3},{value:"Purpose",id:"purpose",level:2}];function c(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"controllers-module-overview",children:"Controllers Module Overview"})}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"controllers.py"})," file serves as the central hub for managing and executing backend operations within the ",(0,s.jsx)(n.strong,{children:"Panorah Framework"}),". It defines the logic for interacting with database tables, handling dynamic operations, and supporting the creation, retrieval, and manipulation of data through various controller methods."]}),"\n",(0,s.jsx)(n.h2,{id:"key-responsibilities",children:"Key Responsibilities"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"DocType Management"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Facilitates the creation, updating, and deletion of ",(0,s.jsx)(n.code,{children:"DocType"})," entities."]}),"\n",(0,s.jsxs)(n.li,{children:["Dynamically generates metadata files, ORM classes, and handles migrations for new or modified ",(0,s.jsx)(n.code,{children:"DocType"})," structures."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Dynamic Data Operations"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Enables operations like data insertion, updates, deletion, and retrieval from database tables."}),"\n",(0,s.jsx)(n.li,{children:"Supports filtering and joining data across related tables."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"File Management"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Provides methods for file uploads and linking uploaded files to specific database records."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Configuration and Migration"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Automates the rewriting of Piccolo configuration files (",(0,s.jsx)(n.code,{children:"piccolo_app.py"})," and ",(0,s.jsx)(n.code,{children:"piccolo_conf.py"}),") to reflect changes in the application's data structure."]}),"\n",(0,s.jsx)(n.li,{children:"Manages database migrations and hooks for schema updates."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"highlights-of-features",children:"Highlights of Features"}),"\n",(0,s.jsxs)(n.h3,{id:"1-dynamic-orm-class-generation",children:["1. ",(0,s.jsx)(n.strong,{children:"Dynamic ORM Class Generation"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Dynamically generates Piccolo ORM models based on the provided schema fields."}),"\n",(0,s.jsxs)(n.li,{children:["Supports complex scenarios like hierarchical data (",(0,s.jsx)(n.code,{children:"is_tree"}),") and child tables (",(0,s.jsx)(n.code,{children:"is_child"}),")."]}),"\n"]}),"\n",(0,s.jsxs)(n.h3,{id:"2-type-safe-data-handling",children:["2. ",(0,s.jsx)(n.strong,{children:"Type-Safe Data Handling"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Leverages schemas (",(0,s.jsx)(n.code,{children:"DocTypeRequestSchema"}),", ",(0,s.jsx)(n.code,{children:"DataFetchResponseSchema"}),", etc.) to ensure structured and validated data processing."]}),"\n"]}),"\n",(0,s.jsxs)(n.h3,{id:"3-error-handling-and-logging",children:["3. ",(0,s.jsx)(n.strong,{children:"Error Handling and Logging"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Provides detailed error handling for database transactions and unexpected exceptions."}),"\n",(0,s.jsxs)(n.li,{children:["Integrates with ",(0,s.jsx)(n.code,{children:"loguru"})," for comprehensive logging and debugging."]}),"\n"]}),"\n",(0,s.jsxs)(n.h3,{id:"4-file-metadata-management",children:["4. ",(0,s.jsx)(n.strong,{children:"File Metadata Management"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Handles metadata generation, ensuring fields like ",(0,s.jsx)(n.code,{children:"created_at"}),", ",(0,s.jsx)(n.code,{children:"updated_at"}),", and ",(0,s.jsx)(n.code,{children:"status"})," are consistently maintained."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"modular-functionality",children:"Modular Functionality"}),"\n",(0,s.jsx)(n.h3,{id:"key-methods",children:(0,s.jsx)(n.strong,{children:"Key Methods"})}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"DocType Operations"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"create()"}),": Creates a new ",(0,s.jsx)(n.code,{children:"DocType"}),", its metadata, and related ORM class."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"add_column()"}),", ",(0,s.jsx)(n.code,{children:"delete_column()"}),", ",(0,s.jsx)(n.code,{children:"rename_column()"}),": Manages schema alterations for ",(0,s.jsx)(n.code,{children:"DocType"}),"."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Data Operations"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"fetch_table_data()"}),", ",(0,s.jsx)(n.code,{children:"insert_data()"}),", ",(0,s.jsx)(n.code,{children:"update_data()"}),", ",(0,s.jsx)(n.code,{children:"delete_data()"}),": Performs CRUD operations on tables."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Configuration Updates"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"rewrite_piccolo_app_config()"}),", ",(0,s.jsx)(n.code,{children:"rewrite_piccolo_config()"}),": Updates application configurations for Piccolo migrations."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"File Handling"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"upload_files()"}),": Handles uploading and linking of files to records."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Utility Methods"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"generate_orm_class()"}),": Dynamically generates ORM models."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"build_fields()"}),": Converts schema definitions into Piccolo-compatible field structures."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"purpose",children:"Purpose"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"controllers.py"})," module is a cornerstone of the Panorah Framework, providing the logic required to bridge the gap between database interactions and high-level framework features. Its modular and extensible design ensures it can support complex workflows while maintaining type safety and flexibility."]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>a});var s=i(6540);const r={},t=s.createContext(r);function l(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);