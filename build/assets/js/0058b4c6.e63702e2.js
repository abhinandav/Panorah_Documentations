"use strict";(self.webpackChunkpanorah_documentation=self.webpackChunkpanorah_documentation||[]).push([[849],{6164:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"category","label":"Getting Started","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Introduction","href":"/docs/getting-started/introduction","docId":"getting-started/introduction","unlisted":false},{"type":"link","label":"Prerequisites","href":"/docs/getting-started/Prerequisites","docId":"getting-started/Prerequisites","unlisted":false},{"type":"link","label":"Installation","href":"/docs/getting-started/installation","docId":"getting-started/installation","unlisted":false}],"href":"/docs/category/getting-started"},{"type":"category","label":"Tutorial","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Creating a DocType","href":"/docs/tutorial/create_doctype","docId":"tutorial/create_doctype","unlisted":false},{"type":"link","label":"Inserting Data","href":"/docs/tutorial/insert_to_doctype","docId":"tutorial/insert_to_doctype","unlisted":false},{"type":"link","label":"Fetching Data","href":"/docs/tutorial/fetch_data","docId":"tutorial/fetch_data","unlisted":false},{"type":"link","label":"Deleting a Document","href":"/docs/tutorial/delete_document","docId":"tutorial/delete_document","unlisted":false},{"type":"link","label":"Updating a Document","href":"/docs/tutorial/update_doc","docId":"tutorial/update_doc","unlisted":false},{"type":"link","label":"Filtering and Sorting","href":"/docs/tutorial/filter_sort","docId":"tutorial/filter_sort","unlisted":false},{"type":"link","label":"Upload Files","href":"/docs/tutorial/file_upload","docId":"tutorial/file_upload","unlisted":false},{"type":"link","label":"Execute Function","href":"/docs/tutorial/exeute_function","docId":"tutorial/exeute_function","unlisted":false}],"href":"/docs/category/tutorial"},{"type":"category","label":"Architecture","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Get started","href":"/docs/architecture/start","docId":"architecture/start","unlisted":false},{"type":"category","label":"Api","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"API Overview","href":"/docs/architecture/Api/indtroduction","docId":"architecture/Api/indtroduction","unlisted":false},{"type":"link","label":"applications.py","href":"/docs/architecture/Api/applications","docId":"architecture/Api/applications","unlisted":false},{"type":"category","label":"doctype","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"views.py","href":"/docs/architecture/Api/doctype/views","docId":"architecture/Api/doctype/views","unlisted":false},{"type":"link","label":"controller.py","href":"/docs/architecture/Api/doctype/controller","docId":"architecture/Api/doctype/controller","unlisted":false},{"type":"link","label":"dao.py","href":"/docs/architecture/Api/doctype/dao","docId":"architecture/Api/doctype/dao","unlisted":false},{"type":"link","label":"schema.py","href":"/docs/architecture/Api/doctype/schema","docId":"architecture/Api/doctype/schema","unlisted":false},{"type":"link","label":"dto.py","href":"/docs/architecture/Api/doctype/dto","docId":"architecture/Api/doctype/dto","unlisted":false}]}]}],"href":"/docs/category/architecture"}]},"docs":{"architecture/Api/applications":{"id":"architecture/Api/applications","title":"applications.py","description":"The application entry point initializes and configures the Panorah Framework by defining routes, middleware, and plugins. It uses Litestar as the underlying framework for handling requests and responses, providing a modular and extensible architecture.","sidebar":"tutorialSidebar"},"architecture/Api/doctype/controller":{"id":"architecture/Api/doctype/controller","title":"controller.py","description":"The controllers.py file serves as the central hub for managing and executing backend operations within the Panorah Framework. It defines the logic for interacting with database tables, handling dynamic operations, and supporting the creation, retrieval, and manipulation of data through various controller methods.","sidebar":"tutorialSidebar"},"architecture/Api/doctype/dao":{"id":"architecture/Api/doctype/dao","title":"dao.py","description":"The dao.py (Data Access Object) module in the Panorah Framework provides an abstraction layer for interacting with the framework\u2019s data layer. It encapsulates database operations, handles hierarchical data, manages metadata, and performs complex queries, making it a critical component for streamlined and reusable data management.","sidebar":"tutorialSidebar"},"architecture/Api/doctype/dto":{"id":"architecture/Api/doctype/dto","title":"dto.py","description":"The DTO (Data Transfer Object) module in the Panorah Framework bridges the gap between schemas and business logic. It utilizes MsgspecDTO from Litestar to convert, validate, and manage data transfer efficiently between the framework\'s components and external systems.","sidebar":"tutorialSidebar"},"architecture/Api/doctype/schema":{"id":"architecture/Api/doctype/schema","title":"schema.py","description":"The schema.py file in the Panorah Framework defines a set of schemas that serve as data models for validating and organizing data passed to and from the framework\'s components. It utilizes msgspec.Struct for its schemas, enabling efficient, type-safe, and structured data validation.","sidebar":"tutorialSidebar"},"architecture/Api/doctype/views":{"id":"architecture/Api/doctype/views","title":"views.py","description":"The views.py file is a core component of the Panorah Framework, serving as the interface between the backend logic and external requests. It defines a series of controllers that handle a wide range of operations, offering modular, extensible, and type-safe API endpoints. Additionally, this module supports dynamic operations by leveraging controllers to process and manage requests efficiently.","sidebar":"tutorialSidebar"},"architecture/Api/indtroduction":{"id":"architecture/Api/indtroduction","title":"API Overview","description":"This section provides a detailed look into the core components of the api module, its architecture, and how it powers the framework.","sidebar":"tutorialSidebar"},"architecture/start":{"id":"architecture/start","title":"Get started","description":"Before diving into development, it\'s essential to understand the structure, components, and design philosophy behind the Panorah Framework. Panorah is built with the goal of simplifying ERP system development by offering a robust, flexible framework that integrates seamlessly with PostgreSQL, FastAPI, and Piccolo ORM.","sidebar":"tutorialSidebar"},"getting-started/installation":{"id":"getting-started/installation","title":"Installation","description":"Welcome to the PANORAH Project Setup Guide! This document will help you get started with your project, from initializing Docusaurus to setting up the database, migrations, and creating a new app.","sidebar":"tutorialSidebar"},"getting-started/introduction":{"id":"getting-started/introduction","title":"Introduction","description":"Welcome to Panorah Framework Documentation","sidebar":"tutorialSidebar"},"getting-started/Prerequisites":{"id":"getting-started/Prerequisites","title":"Prerequisites","description":"A list of resources to help you get started with building apps using the Panorah Framework.","sidebar":"tutorialSidebar"},"tutorial/create_doctype":{"id":"tutorial/create_doctype","title":"Creating a DocType","description":"This tutorial will guide you through the process of creating a DocType in your project. We\'ll explain what a DocType is, why it\'s needed, how to define its payload, and the backend functions involved in its creation.","sidebar":"tutorialSidebar"},"tutorial/delete_document":{"id":"tutorial/delete_document","title":"Deleting a Document","description":"This section explains the backend processes, schemas, and functions involved in deleting a document (record) from a DocType in the Panorah Framework.","sidebar":"tutorialSidebar"},"tutorial/exeute_function":{"id":"tutorial/exeute_function","title":"Execute Function","description":"This section explains the Remote Procedure Call (RPC) mechanism implemented by the Execute Function feature in the Panorah Framework.","sidebar":"tutorialSidebar"},"tutorial/fetch_data":{"id":"tutorial/fetch_data","title":"Fetching Data","description":"This section explains the backend processes, schemas, and functions involved in fetching data from a DocType in the Panorah Framework. There are two methods for fetching data:","sidebar":"tutorialSidebar"},"tutorial/file_upload":{"id":"tutorial/file_upload","title":"Upload Files","description":"This section explains the backend processes, schemas, and functions involved in uploading files in the Panorah Framework.","sidebar":"tutorialSidebar"},"tutorial/filter_sort":{"id":"tutorial/filter_sort","title":"Filtering and Sorting","description":"This section explains the backend processes, schemas, and functions involved in applying filters and sorting while fetching data from a DocType in the Panorah Framework.","sidebar":"tutorialSidebar"},"tutorial/insert_to_doctype":{"id":"tutorial/insert_to_doctype","title":"Inserting Data","description":"This tutorial will guide you through the process of inserting data into an existing DocType. You\'ll learn about the required payload structure, key terminologies, and the backend functions involved.","sidebar":"tutorialSidebar"},"tutorial/update_doc":{"id":"tutorial/update_doc","title":"Updating a Document","description":"This section explains the backend processes, schemas, and functions involved in updating a document (record) in a DocType in the Panorah Framework.","sidebar":"tutorialSidebar"}}}}')}}]);