"use strict";(self.webpackChunkpanorah_documentation=self.webpackChunkpanorah_documentation||[]).push([[729],{6951:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>t,metadata:()=>c,toc:()=>d});var s=i(4848),r=i(8453);const t={title:"Creating a DocType",sidebar_position:1},o="Creating a DocType",c={id:"tutorial/create_doctype",title:"Creating a DocType",description:"This tutorial will guide you through the process of creating a DocType in your project. We'll explain what a DocType is, why it's needed, how to define its payload, and the backend functions involved in its creation.",source:"@site/docs/tutorial/create_doctype.md",sourceDirName:"tutorial",slug:"/tutorial/create_doctype",permalink:"/docs/tutorial/create_doctype",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/tutorial/create_doctype.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Creating a DocType",sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Tutorial",permalink:"/docs/category/tutorial"},next:{title:"Inserting Data",permalink:"/docs/tutorial/insert_to_doctype"}},l={},d=[{value:"What is a DocType?",id:"what-is-a-doctype",level:2},{value:"<strong>Why is a DocType Needed?</strong>",id:"why-is-a-doctype-needed",level:3},{value:"Payload for Creating a DocType",id:"payload-for-creating-a-doctype",level:2},{value:"Terminologies",id:"terminologies",level:3},{value:"Backend Functions Used for DocType Creation",id:"backend-functions-used-for-doctype-creation",level:2},{value:"<strong>Functions Overview</strong>",id:"functions-overview",level:3}];function a(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"creating-a-doctype",children:"Creating a DocType"})}),"\n",(0,s.jsxs)(n.p,{children:["This tutorial will guide you through the process of creating a ",(0,s.jsx)(n.strong,{children:"DocType"})," in your project. We'll explain what a DocType is, why it's needed, how to define its payload, and the backend functions involved in its creation."]}),"\n",(0,s.jsx)(n.h2,{id:"what-is-a-doctype",children:"What is a DocType?"}),"\n",(0,s.jsxs)(n.p,{children:["A ",(0,s.jsx)(n.strong,{children:"DocType"})," is a core concept in the ",(0,s.jsx)(n.strong,{children:"Panorah Framework"})," that defines the structure, fields, and behavior of a particular type of record. It serves as the data model and dictates how the framework interacts with the data."]}),"\n",(0,s.jsx)(n.h3,{id:"why-is-a-doctype-needed",children:(0,s.jsx)(n.strong,{children:"Why is a DocType Needed?"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Data Modeling"}),": Defines the fields and data types for records, ensuring consistency."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Custom Behavior"}),": Configures specific behaviors, such as hierarchical structures or single-instance records."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Scalability"}),": Enables modular design by breaking data into reusable components."]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["For instance, in a ",(0,s.jsx)(n.strong,{children:"Sales Management System"}),", you might create a ",(0,s.jsx)(n.code,{children:"DocType"})," for an ",(0,s.jsx)(n.code,{children:"Invoice"})," with fields like ",(0,s.jsx)(n.code,{children:"invoice_id"}),", ",(0,s.jsx)(n.code,{children:"customer_name"}),", and ",(0,s.jsx)(n.code,{children:"total_amount"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"payload-for-creating-a-doctype",children:"Payload for Creating a DocType"}),"\n",(0,s.jsx)(n.p,{children:"To create a new DocType, you need to send a JSON payload in the following format:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\r\n  "app": "",\r\n  "doc_type_name": "",\r\n  "fields": [\r\n    {\r\n      "name": "",\r\n      "field_type": "Data",\r\n      "label": "",\r\n      "permlevel": 0,\r\n      "options": null\r\n    }\r\n  ],\r\n  "is_child_table": 0,\r\n  "is_tree": 0,\r\n  "is_single": 0,\r\n  "is_submittable": 0\r\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"terminologies",children:"Terminologies"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"app"})})," : The application where the DocType is being created."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"doc_type_name"})})," : The name of the DocType."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"field"})})," : Defines the fields for the DocType structure."]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"name"})})," :  Unique identifier for the field."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"field_type"})})," : Specifies the data type of the field."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"label"})})," : Human-readable label for the field."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"permlevel"})})," : Permission level for the field."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"options"})})," : Additional configuration for certain field types."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"is_child_table"})})," : Indicates if the DocType is a child table (1 for Yes, 0 for No)."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"is_tree"})})," : Specifies if the DocType represents hierarchical data."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"is_single"})})," : Indicates if the DocType is a single-instance record"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"is_submittable"})})," : Determines if the DocType supports submission workflows."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"backend-functions-used-for-doctype-creation",children:"Backend Functions Used for DocType Creation"}),"\n",(0,s.jsx)(n.h3,{id:"functions-overview",children:(0,s.jsx)(n.strong,{children:"Functions Overview"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"DocTypeController.create()"})})," : Processes the payload, creates metadata, and generates the ORM model."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"DocTypeController.build_fields()"})}),": Validates and processes the fields defined in the payload."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"DocTypeController.generate_orm_class()"})}),": Dynamically generates the ORM class for the DocType."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"MigrationService.run_migration()"})}),": Executes database migrations to apply the new DocType schema."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"DocTypeController.rewrite_piccolo_app_config()"})}),": Updates the application's Piccolo configuration."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"HookService.post_run_hook()"})}),": Executes post-creation hooks to finalize the DocType."]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>c});var s=i(6540);const r={},t=s.createContext(r);function o(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);